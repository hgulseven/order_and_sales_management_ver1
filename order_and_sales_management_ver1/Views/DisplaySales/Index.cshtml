@model IEnumerable<order_and_sales_management_ver1.Models.DisplaySales>

@{
    ViewBag.Title = "SATIŞLAR";
}

<div class="panel-info">
    <h5>_ SATIŞLAR</h5>
</div>
<div class="alert alert-danger">
    @Html.ValidationSummary(false)
</div>
<hr />
@Html.ActionLink("Müşteriyi Geri Çağır", "updateLastCustomerAsNotPaid", "DisplaySales", new { }, new { @class = "btn btn-info  btn-lg", @style = "font-size:12px" })
<form id="myform">
    <div class="table-responsive">
        <table class="table table-striped table-curved table-sm" style="font-size:0.8em">
            <thead class="table-head">
                <tr>
                    <th>
                        @Html.DisplayNameFor(DisplaySales => DisplaySales.salesID)
                    </th>
                    <th style="text-align:right">
                        @Html.DisplayNameFor(DisplaySales => DisplaySales.tutar)
                    </th>
                    <th style="text-align:right">
                        @Html.DisplayNameFor(DisplaySales => DisplaySales.indirimOranı)
                    </th>
                    <th style="text-align:right">
                        @Html.DisplayNameFor(DisplaySales => DisplaySales.paidTutar)
                    </th>
                    <th>
                    </th>
                    <th>
                    </th>
                    <th>
                    </th>
                    <th>
                    </th>
                    <th>
                    </th>
                </tr>
            </thead>
            @foreach (var item in Model)
            {
                <tr id=@item.rowID style="border-bottom: 1px solid #cdd0d4;">
                    <td>
                        @Html.DisplayFor(modelItem => item.salesID)
                    </td>
                    <td style="text-align:right">
                        @Html.DisplayFor(modelItem => item.tutar)
                    </td>
                    <td style="text-align:right">
                        @Html.TextBoxFor(modelItem => item.indirimOranı, new { Id = "indirimOran" + @item.salesID, onblur = "calculateIndirim(" + @item.salesID + ")" })
                    </td>
                    <td style="text-align:right">
                        @Html.TextBoxFor(modelItem => item.paidTutar, new { Id = "paidTutar" + @item.salesID })
                        @Html.ValidationMessageFor(modelItem => item.paidTutar)
                    </td>
                    <td width="75">
                        <input id="clickMe" class="btn btn-primary btn-sm btn-block" type="button" value="Detaylar" style="font-size:12px" onclick="addTable(@item.rowID, @item.salesID);" />
                    </td>
                    <td width="75'">
                        @Html.ActionLink("Ekle", "Index", "SalesModels", new { salesID = item.salesID }, new { @class = "btn btn-secondary btn-sm btn-block", @style = "font-size:12px" })
                    </td>
                    <td width="75">
                        @Html.ActionLink("Nakit", "Tahsilat", "DisplaySales", new { salesID = item.salesID, typeOfCollection = 1 }, new { @class = "btn btn-danger  btn-sm btn-block", @style = "font-size:12px", @onclick = "getValue2(this)" })
                    </td>
                    <td width="120">
                        @Html.ActionLink("Kredi Kartı", "Tahsilat", "DisplaySales", new { salesID = item.salesID, typeOfCollection = 2 }, new { @class = "btn btn-danger btn-sm btn-block", @style = "font-size:12px", @onclick = "getValue2(this)" })
                    </td>
                    <td width="75">
                        @Html.ActionLink("Diğer", "Tahsilat", "DisplaySales", new { salesID = item.salesID, typeOfCollection = 3 }, new { @class = "btn btn-danger btn-sm btn-block", @style = "font-size:12px", @onclick = "getValue2(this)" })
                    </td>

                </tr>
            }

        </table>
    </div>
</form>

@section scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/lib/signalr/dist/browser/signalr.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <!--SignalR script to update the chat page and send messages.-->
    <script>

        function calculateIndirim(salesID)
        {
            elemID = "indirimOran" + salesID.toString();
            htmlElement = document.getElementById(elemID);
            row = htmlElement.parentNode.parentNode;
            var IndirimOranı = parseFloat(htmlElement.value);
            var tutar=parseFloat(row.cells[1].innerHTML.trim())
            var tahsilEdilen = tutar-(IndirimOranı * tutar)/100;
            row.cells[3].innerHTML = '<input id=paidTutar'+salesID+' data-val=true value="'+tahsilEdilen.toLocaleString("tr-TR")+'"/>';
        }

        $(function () {
            var connection = new signalR.HubConnectionBuilder()
                .withUrl("/RefreshSignalHub", {
                    skipNegotiation: true,
                    transport: signalR.HttpTransportType.WebSockets
                })
                .build();

            connection.start().catch(err => console.error(err.toString()));
            connection.on('Send', (message) => {
                location.reload()
            });
        });

    function addTable(rowID, salesID) {
        i = 1;
        if (document.getElementById("details0") == null) {
            var curTable = document.getElementById(rowID).parentNode;
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetSalesDetail", "DisplaySales")',
                data: { "salesID": salesID},
                success: function (data) {
                    var row = document.getElementById(rowID);
                    var thead = document.createElement('thead');
                    thead.class = "table-head";
                    row.appendChild(thead);
                    var tr = curTable.insertRow(row.rowIndex);
                    tr.style = "border-left: 1px solid #cdd0d4;border-right: 1px solid #cdd0d4; "
                    tr.id = "details0";
                    tr.className = "border-lb";
                    var th = document.createElement('TH');
                    th.className = "table-head";
                    var cellValue = document.createTextNode("Personel");
                    th.appendChild(cellValue);
                    tr.appendChild(th);
                    var th = document.createElement('TH');
                    th.className = "table-head";
                    var cellValue = document.createTextNode("Ürün");
                    th.appendChild(cellValue);
                    tr.appendChild(th);
                    var th = document.createElement('TH');
                    th.className = "table-head";
                    var cellValue = document.createTextNode("Miktar");
                    th.appendChild(cellValue);
                    tr.appendChild(th);
                    var th = document.createElement('TH');
                    th.className = "table-head";
                    th.style = "border-top-right-radius:10px;text-align:right"
                    var cellValue = document.createTextNode("Tutar");
                    th.appendChild(cellValue);
                    tr.appendChild(th);

                var items = jQuery.parseJSON(data);
                for (i = 0; i < items.length; i++)
                {
                var row = document.getElementById(rowID);
                var tr = curTable.insertRow(row.rowIndex + i+1);
                tr.style = "border-left: 1px solid #cdd0d4; border-right: 1px solid #cdd0d4;border-bottom: 1px solid #cdd0d4"
                tr.id = "details" + (i + 1);
                var td = document.createElement('TD');
                var cellValue = document.createTextNode(items[i].employee);
                td.appendChild(cellValue);
                tr.appendChild(td);
                var td = document.createElement('TD');
                var cellValue = document.createTextNode(items[i].productName);
                td.appendChild(cellValue);
                tr.appendChild(td);
                var td = document.createElement('TD');
                var cellValue = document.createTextNode(items[i].amount);
                td.appendChild(cellValue);
                tr.appendChild(td);
                var td = document.createElement('TD');
                td.style ="text-align:right"
                var cellValue = document.createTextNode(items[i].tutar);
                td.appendChild(cellValue);
                tr.appendChild(td);
                }
                },
                error: function () {
                alert("error")
                }
                });
                } else {
                i = 0;
                var curTable = document.getElementById(rowID).parentNode;
                while (document.getElementById("details" + i) != null) {
                    var row = document.getElementById("details" + i);
                    var curTable = row.parentNode;
                    curTable.deleteRow(row.rowIndex-1);
                    i = i + 1;
                }
                }
        }
        function getPaidTutar(Id) {
            var curRow = Id.parentNode.parentNode;
            var salesID = curRow.cells.item(0).innerHTML;
            var PaidTutar = document.getElementById("paidTutar" + salesID.toString().trim()).value;
            return PaidTutar;
         }

	function getValue2(Id) {
           var xmlhttp = new XMLHttpRequest();
           var curRow = Id.parentNode.parentNode;
           var salesID = curRow.cells.item(0).innerHTML.trim();
            var val = document.getElementById("paidTutar" + salesID).value;
            val = val.replace(".", ",");
           xmlhttp.onreadystatechange = function() {
             if (xmlhttp.readyState == XMLHttpRequest.DONE) {   // XMLHttpRequest.DONE == 4
               if (xmlhttp.status == 200)
               {
               }
               else if (xmlhttp.status == 400)
                    {
                        alert('There was an error 400');
                    }
                    else
                    {
                        alert('something else other than 200 was returned');
                    }
               }
         };

         xmlhttp.open("GET","/DisplaySales/updatePaidAmount?salesID="+salesID+"&paidAmount="+val , false);
         xmlhttp.send();
        location.url("DisplaySales");
       }


        function getValueold2(Id) {
            var curRow = Id.parentNode.parentNode;
            var salesID = curRow.cells.item(0).innerHTML;
            var val=document.getElementById("paidTutar"+salesID.toString().trim()).value;
            $.ajax({
                type: 'POST',
                url: '@Url.Action("updatePaidAmount", "DisplaySales")',
                data: { "salesID": salesID, "paidAmount": val },
                success: function (data) {
                }
            });
            return false;
        }
    </script>
}

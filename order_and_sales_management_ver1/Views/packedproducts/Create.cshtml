@model order_and_sales_management_ver1.Models.packedproduct

@{
    ViewData["Title"] = "Liste";
}
<div class="panel-info">
    <h1>PAKETLİ ÜRÜN TANIMLAMA EKRANI</h1>
</div>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<div class="alert alert-danger">
    @Html.ValidationSummary(false)
</div>
<div class="row">
    <div class="col-md-4">
        <h4>ÜRÜN SEÇİMİ</h4>
        <div class="row">
            <div class="col-md-6">
                <input type="text" id="product" class="form-control" />
            </div>
            <div class="col-md-6">
                <input type="submit" id="getProducts" value="Ürün Ara" class="btn btn-primary btn" onclick="getProducts()" />
            </div>
        </div>
        <table class="table table-striped table-curved table_data" style="font-size:0.7em" id="products">
            <thead class="table-head">
                <tr>
                    <th>
                        @Html.DisplayName("Ürün Id")
                    </th>
                    <th>
                        @Html.DisplayName("Ürün Adı")
                    </th>
                    <th>@Html.DisplayName("Ürün Fiyatı")</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                    </td>
                    <td>
                    </td>
                    <td>
                    </td>
                    <td>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="col-md-8">
        <div id="entryForm">
            <form asp-controller="packedproducts" asp-action="Create" method="post">
                <h4>
                    PAKETLİ ÜRÜN
                    @Html.EditorFor(Model => Model.packedProductName)
                    @Html.HiddenFor(Model=>Model.packedId)
                    <input type="submit" asp-action="Create" id="kaydet" value="Kaydet/Güncelle" class="btn btn-primary btn" formmethod="post" />
                    <input asp-for=@Model.operation hidden type="text" value=@Model.operation />
                </h4>
                <table class="table table-striped table-curved" style="font-size:0.7em" id="packedDetails">
                    <colgroup>
                        <col style="width:10%">
                        <col style="width:40%">
                        <col style="width:5%">
                        <col style="width:5%">
                        <col style="width:30%">
                        <col style="width:10%">
                    </colgroup>
                    <thead class="table-head">
                        <tr>
                            <th>
                                @Html.LabelFor(modelItem => Model.packedProductDetails.ElementAt(0).baseProduct.baseId)
                            </th>
                            <th>
                                @Html.LabelFor(modelItem => Model.packedProductDetails.ElementAt(0).baseProduct.name)
                            </th>
                            <th>
                                @Html.LabelFor(modelItem => Model.packedProductDetails.ElementAt(0).baseProduct.retailPrice)
                            </th>
                            <th>
                                @Html.LabelFor(modelItem => Model.packedProductDetails.ElementAt(0).amount)
                            </th>
                            <th>
                                <label>Tutar</label>
                            </th>
                            <th>
                                <label>İşlem</label>
                            </th>
                        </tr>
                    </thead>
                    <tr>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                    </tr>
                    @foreach (var item in Model.packedProductDetails)
                    {
                <tr>
                    <td>
                        <input asp-for=@item.baseProduct.baseId type="text" readonly value=@item.baseProduct.baseId>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.baseProduct.name)
                    </td>
                    <td>
                        @Html.EditorFor(modelItem => item.baseProduct.retailPrice, new { htmlAttributes =new { id = "productPrice" + item.baseProduct.baseId }})
                    </td>
                    <td>
                        @Html.EditorFor(modelItem => item.amount, new { htmlAttributes = new { id = "productAmount" + item.baseProduct.baseId, onblur = "calcTutar()" } })
                    </td>
                    <td>
                        <input class="text-box single-line" id="productSum-@item.baseProduct.baseId" readonly value="0"/>
                    </td>
                    <td align="left">
                        <button type="button" class="btn-sm btn-block btn-danger" style="font-size:10px" onclick="deleteLine(@item.baseProduct.baseId)" >Sil</button>
                    </td>
                </tr>
                    }
                </table>
            </form>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        //       $("#entryForm").hide();
        calcTutar();
    });

    function fnSelect() {
        GetSelected();
    }

    function getPersonelLocation() {
        var personelID = document.getElementById("empSelect");
        $.ajax({
            'url': 'getLocation',
            'type': 'GET',
            'data': {
                'employeeID': personelID.value,
            },
            'success': function (data) {
                var loc = document.getElementById("locationName");
                loc.value = data.locationName.trim();
                var loc = document.getElementById("empLocation");
                loc.value = data.locationID;
            },
            'error': function (request, error) {
                alert("Request: " + JSON.stringify(request));
            }
        });

    }
    function GetSelected() {
        //Reference the Table.
        var grid = document.getElementById("products");

        //Reference the CheckBoxes in Table.
        var checkBoxes = grid.getElementsByTagName("INPUT");
        message = "";
        //Loop through the CheckBoxes.
        for (var i = 0; i < checkBoxes.length; i++) {
            if (checkBoxes[i].checked) {
                var row = checkBoxes[i].parentNode.parentNode;
                var table = document.getElementById("packedDetails");
                var NewRow = table.insertRow(table.numofRows);
                var productID = NewRow.insertCell(0);
                var productName = NewRow.insertCell(1);
                var productPrice = NewRow.insertCell(2);
                var productAmount = NewRow.insertCell(3);
                var productSum = NewRow.insertCell(4);
                var actionBtn = NewRow.insertCell(5);
                productID.innerHTML = '<input class="text-box single-line" readonly value="' + row.cells[0].innerHTML.trim()+ '" name="item.baseProduct.baseId"/>' ;
                productName.innerHTML = row.cells[1].innerHTML.trim();
                productPrice.innerHTML = '<input class="text-box single-line" readonly value="' + row.cells[2].innerHTML.trim() + '" id="productPrice' + row.cells[0].innerHTML.trim() + '"/>';
                productAmount.innerHTML = '<input class="text-box single-line" name="packedproductdetails.amount" onblur=calcTutar() id=productAmount' + row.cells[0].innerHTML.trim() + ' />';
                productSum.innerHTML = '<input class="text-box single-line" id="productSum-' + row.cells[0].innerHTML.trim() + '" readonly value="0"/>';
                actionBtn.innerHTML = '<input type="submit" value="Sil" class="btn-sm btn-block btn-danger" style="font-size:10px" onclick="deleteLine('+row.cells[0].innerHTML.trim()+')" />'
                checkBoxes[i].checked = false;
            }
        }
        $("#entryForm").show();
        var date = new Date();
        var dateString = dateToYMD(date);
        $("#productionLotID").val(dateString);
        $("#productionLotID").select();
    }

    function deleteLine(packedId) {
        var table = document.getElementById("packedDetails");
        i = 2
        while (table.rows[i].cells[0].children[0].value != packedId)
            i=i+1
        table.deleteRow(i);
        calcTutar();
    }

    function calcTutar() {
        var table = document.getElementById("packedDetails");
        var toplam = 0;
        i = 2
        for (i = 2; i < table.rows.length; i++) {
            packedId=table.rows[i].cells[0].children[0].value; 
            strAmount = document.getElementById("productAmount" + packedId).value.replace(',','.');
            var floatAmount = parseFloat(strAmount);
            strPrice = document.getElementById("productPrice" + packedId).value.replace(',', '.');
            var floatPrice = parseFloat(strPrice);
            tutar = floatAmount * floatPrice;
            table.rows[i].cells[2].innerHTML = '<input class="text-box single-line" id="productPrice' + packedId + '" readonly value="' + floatPrice.toLocaleString().replace(',','.') + '"/>';
            table.rows[i].cells[3].innerHTML = '<input class="text-box single-line" name="packedproductdetails.amount" id="productAmount' + packedId + '"onblur=calcTutar() value="' + floatAmount.toLocaleString().replace(',', '.') + '"/>';
            table.rows[i].cells[4].innerHTML = '<input class="text-box single-line" id="productSum-' + packedId + '" readonly value="' + tutar.toLocaleString("tr-TR").replace(',', '.') + '"/>';
            toplam = toplam + tutar;
        }
        table.rows[1].cells[4].innerHTML = '<input class="text-box single-line" readonly value="' + toplam.toLocaleString("tr-TR")+ '"/>';
    }


    function paginate() {
        var currentPage = 0;
        var numPerPage = 5;
        var $table = $('table.table_data');
        $table.bind('repaginate', function () {
            $table.find('tbody tr').hide().slice(currentPage * numPerPage, (currentPage + 1) * numPerPage).show();
        });
        $table.trigger('repaginate');
        var numRows = $table.find('tbody tr').length;
        var numPages = Math.ceil(numRows / numPerPage);
        var $pager = $('<div class="pager"></div>');
        for (var page = 0; page < numPages; page++) {
            $('<span class="page-number"></span>').text(page + 1).bind('click', {
                newPage: page
            }, function (event) {
                currentPage = event.data['newPage'];
                $table.trigger('repaginate');
                $(this).addClass('active').siblings().removeClass('active');
            }).appendTo($pager).addClass('clickable');
        }

        $pager.insertAfter($table).find('span.page-number:first').addClass('active');


    }

    $('table.table_data').each(function () {
        var currentPage = 0;
        var numPerPage = 5;
        var $table = $(this);
        $table.bind('repaginate', function () {
            $table.find('tbody tr').hide().slice(currentPage * numPerPage, (currentPage + 1) * numPerPage).show();
        });
        $table.trigger('repaginate');
        var numRows = $table.find('tbody tr').length;
        var numPages = Math.ceil(numRows / numPerPage);
        var $pager = $('<div class="pager"></div>');
        for (var page = 0; page < numPages; page++) {
            $('<span class="page-number"></span>').text(page + 1).bind('click', {
                newPage: page
            }, function (event) {
                currentPage = event.data['newPage'];
                $table.trigger('repaginate');
                $(this).addClass('active').siblings().removeClass('active');
            }).appendTo($pager).addClass('clickable');
        }

        $pager.insertAfter($table).find('span.page-number:first').addClass('active');


    });


    function dateToYMD(date) {
        var d = date.getDate();
        var m = date.getMonth() + 1; //Month from 0 to 11
        var y = date.getFullYear();
        return '' + y + '-' + (m <= 9 ? '0' + m : m) + '-' + (d <= 9 ? '0' + d : d);
    }

    function getProducts() {
        var filter = document.getElementById("product");
        $.ajax({
            'url': 'getProducts',
            'type': 'GET',
            'data': {
                'productName': filter.value,
            },
            'success': function (data) {
                var table = document.getElementById("products");
                var numofRows = table.rows.length;
                for (i = 0; i < data.length; i++) {
                    var row = table.insertRow(1);
                    var newCell1 = row.insertCell(0);
                    var newCell2 = row.insertCell(1);
                    var newCell3 = row.insertCell(2)
                    var newCell4 = row.insertCell(3);
                    newCell1.innerHTML = data[i].baseId;
                    newCell2.innerHTML = data[i].name;
                    newCell3.innerHTML = data[i].retailPrice.toString();
                    newCell4.innerHTML = '<input type="checkbox" id="selected" onclick="fnSelect()" />'
                }
                var lastItem = table.rows.length - numofRows;
                for (i = table.rows.length - 1; i > lastItem; i--) {
                    table.deleteRow(i);
                }
                $(".pager").remove();
                paginate();
            },
            'error': function (request, error) {
                alert("Request: " + JSON.stringify(request));
            }
        });

    }

    function createJson() {
        var jsObj = { Operation: document.getElementById("operation").value,orderID: document.getElementById("orderID").value, orderDate: document.getElementById("orderDate").value, orderOwner_personelID: document.getElementById("empSelect").value, LocationID: document.getElementById("empLocation").value };
        var table = document.getElementById("packedDetails");
        var orderModelDetails = [];
        for (i = 2; i < table.rows.length; i++) {
            if (table.rows[i].cells[0].innerHTML.trim() != "") {
                var obj = { orderID: document.getElementById("orderID").value, orderLineNo: i-1, productID: table.rows[i].cells[0].innerHTML, productAmount: document.getElementById("productAmount" + table.rows[i].cells[0].innerText).value }
                orderModelDetails[i - 2] = obj;
            }
        }
        $.ajax({
            'url': 'Kaydet',
            'type': 'POST',
            'data': {
                'jsonSiparis': JSON.stringify(jsObj),
                'jsonOrderDetails': JSON.stringify(orderModelDetails),
            },
            'success': function (data) {
                window.location.href="/SiparisModel/Liste";
            },
            'error': function (request, error) {
                alert("Request: " + JSON.stringify(request));
            }
        });

    }

    function checkRecord() {
        var prodID = document.getElementById("productID");
        var lotID = document.getElementById("productionLotID");
        var prodName = document.getElementById("productName");
        var stockAmount = document.getElementById("stockAmount");
        var action = "newEntry";

        $.ajax({
            'url': 'StockItemExists',
            'type': 'GET',
            'data': {
                'prodID': prodID.value,
                'lotID': lotID.value
            },
            'success': function (data) {
                if (data == true) {
                    if (confirm("Kayıt Daha Önce girilmiş. Güncellemek mi istiyorsunuz?")) {
                        action = "update"
                    } else {
                        action = "doNothing"
                    }
                }
                $.ajax({
                    'url': 'Giris',
                    'type': 'POST',
                    'data': {
                        'productID': prodID.value,
                        'ProductName': prodName.Value,
                        'productionLotID': lotID.value,
                        'stockAmount': stockAmount.value,
                        'action': action
                    },
                    'success': function (data) {
                        location.reload();
                    },
                    'error': function (request, error) {
                        alert("Request: " + JSON.stringify(request));
                    }
                });
            },
            'error': function (request, error) {
                alert("Request: " + JSON.stringify(request));
            }
        });
    }
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

@model Order_And_Sales_Management_ver1.Models.SiparisModel

@{
    ViewData["Title"] = "Liste";
}
    <div class="panel-info">
        <h1>Sipariş Giriş Ekranı</h1>
        <h4>Siparis Tablosu</h4>
    </div>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<div class="alert alert-danger">
  @Html.ValidationSummary(false)
</div>
    <div class="row">
        <div class="col-md-2">
            <label asp-for="productName" class="control-label"></label>
        </div>
        <div class="col-md-6">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="productName" id="product" class="form-control" />
            <span asp-validation-for="productName" class="text-danger"></span>
        </div>
        <div class="col-md-4">
            <input type="submit" id="getProducts" value="Filtrele" class="btn btn-primary" onclick="getProducts()"/>
        </div>
    </div>

<table class="table table-striped table-curved table_data" id="products">
    <thead class="table-head">
        <tr>
                <th>
                    @Html.DisplayName("Ürün Id")
                </th>
                <th>
                    @Html.DisplayName("Ürün Adı")
                </th>
                <th></th>
        </tr>
    </thead>
    <tbody>
            <tr>
                <td>
                </td>
                <td>
                </td>
                <td>
                </td>
            </tr>
    </tbody>
</table>
<div id="entryForm">
    <hr/>
    <h3>SİPARİŞ FİŞİ</h3>
    <div class="row">
        <div class="col-md-1">
            <label asp-for="orderDate" class="control-label"></label>
        </div>
        <div class="col-md-2">
            <input asp-for="orderDate" id="orderDate" class="form-control" readonly />
        </div>
        <div class="col-md-1">
            <label asp-for="orderOwner_personelID" class="control-label"></label>
        </div>
        <div class="col-md-2">
            <select asp-for="orderOwner_personelID" class="form-control" asp-items="ViewBag.personelID" id="empSelect" onload="getPersonelLocation()" onchange="getPersonelLocation()"></select>
        </div>
        <div class="col-md-2">
            <label asp-for="orderLocationID" class="control-label"></label>
        </div>
        <div class="col-md-1">
            <input asp-for="orderLocation.locationID" id="empLocation" class="form-control" readonly />
        </div>
        <div class="col-md-2">
            <input asp-for="orderLocation.locationName" id="locationName" class="form-control" readonly />
        </div>
        <div class="col-md-1">
            <input type="submit" value="Kaydet" class="btn btn-primary" onclick="createJson()" />
        </div>

    </div>
            <table class="table table-striped table-curved" id="orderDetails">
                <thead class="table-head">
                    <tr>
                        <th>
                            @Html.DisplayName("Satır No")
                        </th>
                        <th>
                            @Html.DisplayName("Ürün Id")
                        </th>
                        <th>
                            @Html.DisplayName("Ürün Adı")
                        </th>
                        <th>
                            @Html.DisplayName("Miktar")
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                        </td>
                        <td>
                        </td>
                        <td>
                        </td>
                        <td>
                        </td>
                    </tr>

                    @foreach (var item in Model.OrderDetailsModels)
                    {

                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.ProductModel.productID)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ProductModel.ProductName)
                            </td>
                            <td>
                                @Html.EditorFor(modelItem => item.productAmount)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
</div>
<script>
    $(document).ready(function () {
//       $("#entryForm").hide(); 
    });

    function fnSelect() {
        GetSelected();
    }

    function getPersonelLocation() {
        var personelID = document.getElementById("empSelect");
        	    $.ajax({
				    'url': 'getLocation',
				    'type': 'GET',
				    'data': {
					    'employeeID': personelID.value,
				    },
                    'success': function (data) {
                        var loc = document.getElementById("locationName");
                        loc.value = data.locationName.trim();
                        var loc = document.getElementById("empLocation");
                        loc.value=data.locationID;
    			    },
				    'error': function (request, error) {
					    alert("Request: " + JSON.stringify(request));
				    }
			    });

    }
    function GetSelected() {
        //Reference the Table.
        var grid = document.getElementById("products");

        //Reference the CheckBoxes in Table.
        var checkBoxes = grid.getElementsByTagName("INPUT");
        message = "";
        //Loop through the CheckBoxes.
        for (var i = 0; i < checkBoxes.length; i++) {
            if (checkBoxes[i].checked) {
                var row = checkBoxes[i].parentNode.parentNode;
                var table = document.getElementById("orderDetails");
                var NewRow = table.insertRow(1); 
                var Newcell1 = NewRow.insertCell(0); 
                var Newcell2 = NewRow.insertCell(1); 
                var Newcell3 = NewRow.insertCell(2); 
                var Newcell4 = NewRow.insertCell(3); 
                Newcell1.innerHTML = (table.rows.length-2).toString();
                Newcell2.innerHTML = row.cells[0].innerHTML.trim(); 
                Newcell3.innerHTML = row.cells[1].innerHTML.trim(); 
                Newcell4.innerHTML ='<input class="form-control" data-val="true" name="orderDetailModels.productAmount" id=productAmount'+(table.rows.length-2).toString()+' />';
                checkBoxes[i].checked = false;
            }
        }
        $("#entryForm").show();
        var date = new Date();
        var dateString = dateToYMD(date);
        $("#productionLotID").val(dateString);
        $("#productionLotID").select();
    }

    function paginate() {
        var currentPage = 0;
        var numPerPage = 3;
        var $table = $('table.table_data');
        $table.bind('repaginate', function () {
            $table.find('tbody tr').hide().slice(currentPage * numPerPage, (currentPage + 1) * numPerPage).show();
        });
        $table.trigger('repaginate');
        var numRows = $table.find('tbody tr').length;
        var numPages = Math.ceil(numRows / numPerPage);
        var $pager = $('<div class="pager"></div>');
        for (var page = 0; page < numPages; page++) {
            $('<span class="page-number"></span>').text(page + 1).bind('click', {
                newPage: page
            }, function (event) {
                currentPage = event.data['newPage'];
                $table.trigger('repaginate');
                $(this).addClass('active').siblings().removeClass('active');
            }).appendTo($pager).addClass('clickable');
        }

        $pager.insertAfter($table).find('span.page-number:first').addClass('active');


    }

        $('table.table_data').each(function () {
        var currentPage = 0;
        var numPerPage = 3;
        var $table = $(this);
        $table.bind('repaginate', function () {
            $table.find('tbody tr').hide().slice(currentPage * numPerPage, (currentPage + 1) * numPerPage).show();
        });
        $table.trigger('repaginate');
        var numRows = $table.find('tbody tr').length;
        var numPages = Math.ceil(numRows / numPerPage);
        var $pager = $('<div class="pager"></div>');
        for (var page = 0; page < numPages; page++) {
            $('<span class="page-number"></span>').text(page + 1).bind('click', {
                newPage: page
            }, function (event) {
                currentPage = event.data['newPage'];
                $table.trigger('repaginate');
                $(this).addClass('active').siblings().removeClass('active');
            }).appendTo($pager).addClass('clickable');
        }

        $pager.insertAfter($table).find('span.page-number:first').addClass('active');


    });


    function dateToYMD(date) {
        var d = date.getDate();
        var m = date.getMonth() + 1; //Month from 0 to 11
        var y = date.getFullYear();
        return '' + y + '-' + (m<=9 ? '0' + m : m) + '-' + (d <= 9 ? '0' + d : d);
    }

    function getProducts() {
        var filter = document.getElementById("product");
			    $.ajax({
				    'url': 'getProducts',
				    'type': 'GET',
				    'data': {
					    'productName': filter.value,
				    },
                    'success': function (data) {
                        var table = document.getElementById("products");
                        var numofRows = table.rows.length;
                        for (i = 0; i < data.products.length; i++) {
                            var row = table.insertRow(1);
                            var newCell1 = row.insertCell(0);
                            var newCell2 = row.insertCell(1);
                            var newCell3 = row.insertCell(2);
                            newCell1.innerHTML = data.products[i].productID;
                            newCell2.innerHTML = data.products[i].productName;
                            newCell3.innerHTML = '<input type="checkbox" id="selected" onclick="fnSelect()" />'
                        }
                        var lastItem = table.rows.length - numofRows;
                        for (i = table.rows.length - 1; i > lastItem; i--) {
                            table.deleteRow(i);
                        }
                        $(".pager").remove();
                        paginate();
    			    },
				    'error': function (request, error) {
					    alert("Request: " + JSON.stringify(request));
				    }
			    });

    }

    function createJson() {
        var jsObj = {orderDate:document.getElementById("orderDate").value, orderOwner_personelID:document.getElementById("empSelect").value,LocationID:document.getElementById("empLocation").value };
        var table = document.getElementById("orderDetails");
        var orderModelDetails = [];
        for (i = 1; i < table.rows.length; i++) {
            if (table.rows[i].cells[1].innerHTML.trim() != "") {
                var obj = { orderLineNo: table.rows[i].cells[0].innerHTML, productID: table.rows[i].cells[1].innerHTML, productAmount: document.getElementById("productAmount" + table.rows[i].cells[0].innerHTML).value }
                orderModelDetails[i - 1] = obj;
            }
        }
			    $.ajax({
				    'url': 'Giris',
				    'type': 'POST',
				    'data': {
					    'jsonSiparis': JSON.stringify(jsObj),
					    'jsonOrderDetails': JSON.stringify(orderModelDetails),
				    },
                    'success': function (data) {
                        location.reload(); 
				    },
				    'error': function (request, error) {
					    alert("Request: " + JSON.stringify(request));
				    }
			    });

    }


    function checkRecord() {
        var prodID = document.getElementById("productID");
        var lotID = document.getElementById("productionLotID");
        var prodName = document.getElementById("productName");
        var stockAmount = document.getElementById("stockAmount");
        var action = "newEntry";

        $.ajax({
            'url' : 'StockItemExists',
            'type' : 'GET',
            'data' : {
             'prodID': prodID.value,
             'lotID': lotID.value
            },
            'success': function (data) {    
                if (data == true) {
                    if (confirm("Kayıt Daha Önce girilmiş. Güncellemek mi istiyorsunuz?")) {
                        action = "update"
                    } else {
                        action = "doNothing"
                    }
                }
			    $.ajax({
				    'url': 'Giris',
				    'type': 'POST',
				    'data': {
					    'productID': prodID.value,
					    'ProductName': prodName.Value,
					    'productionLotID': lotID.value,
					    'stockAmount': stockAmount.value,
					    'action': action
				    },
                    'success': function (data) {
                        location.reload(); 
				    },
				    'error': function (request, error) {
					    alert("Request: " + JSON.stringify(request));
				    }
			    });
            },
            'error' : function(request,error)
            {
                alert("Request: "+JSON.stringify(request));
            }
        });
    }
</script>